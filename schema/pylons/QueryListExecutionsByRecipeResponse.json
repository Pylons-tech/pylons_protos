{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/QueryListExecutionsByRecipeResponse",
    "definitions": {
        "Pylonstech.pylons.pylons.DoubleKeyValue": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "DoubleKeyValue describes double key/value set"
        },
        "Pylonstech.pylons.pylons.Execution": {
            "properties": {
                "creator": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "recipeID": {
                    "type": "string"
                },
                "cookbookID": {
                    "type": "string"
                },
                "recipeVersion": {
                    "type": "string"
                },
                "nodeVersion": {
                    "type": "string"
                },
                "blockHeight": {
                    "type": "string"
                },
                "itemInputs": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.ItemRecord"
                    },
                    "type": "array"
                },
                "coinInputs": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array"
                },
                "coinOutputs": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array"
                },
                "itemOutputIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "itemModifyOutputIDs": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "Pylonstech.pylons.pylons.ItemRecord": {
            "properties": {
                "ID": {
                    "type": "string"
                },
                "doubles": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.DoubleKeyValue"
                    },
                    "type": "array"
                },
                "longs": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.LongKeyValue"
                    },
                    "type": "array"
                },
                "strings": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.StringKeyValue"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "Pylonstech.pylons.pylons.LongKeyValue": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "LongKeyValue describes long key/value set"
        },
        "Pylonstech.pylons.pylons.StringKeyValue": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "StringKeyValue describes string key/value set"
        },
        "QueryListExecutionsByRecipeResponse": {
            "properties": {
                "CompletedExecutions": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.Execution"
                    },
                    "type": "array"
                },
                "PendingExecutions": {
                    "items": {
                        "$ref": "#/definitions/Pylonstech.pylons.pylons.Execution"
                    },
                    "type": "array"
                },
                "pagination": {
                    "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
                    "additionalProperties": true,
                    "description": "pagination defines the pagination in the response."
                }
            },
            "additionalProperties": true,
            "type": "object"
        },
        "cosmos.base.query.v1beta1.PageResponse": {
            "properties": {
                "next_key": {
                    "type": "string",
                    "description": "next_key is the key to be passed to PageRequest.key to\n query the next page most efficiently",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "total": {
                    "type": "string",
                    "description": "total is total number of results available if PageRequest.count_total\n was set, its value is undefined otherwise"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "PageResponse is to be embedded in gRPC response messages where the\n corresponding request message has used PageRequest.\n\n  message SomeResponse {\n          repeated Bar results = 1;\n          PageResponse page = 2;\n  }"
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "description": "Coin defines a token with a denomination and an amount.\n\n NOTE: The amount field is an Int which implements the custom method\n signatures required by gogoproto."
        }
    }
}